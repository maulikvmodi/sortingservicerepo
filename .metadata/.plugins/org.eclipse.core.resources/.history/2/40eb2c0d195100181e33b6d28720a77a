package com.hm.sortingservice.sortingservice.controller;

import java.util.Random;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;


@RestController
public class SortNumbersController {

	private JSONObject sortedArrayObject = new JSONObject();
	private int sortedArrayObjKey =1; 
	private JSONArray randomNumberArrayClone;
	private int arr[];
	
	@RequestMapping(value="/getRandomNumbers", method=RequestMethod.GET)
	public @ResponseBody String getRandomNumbersArray() {
		System.out.println("insied getRandomNumbersArray");
		JSONArray randomNumArray = new JSONArray();
		
		for(int randomCount = 0; randomCount < 50; randomCount++) {
			Random r = new Random();
			randomNumArray.put(r.ints(1,(100+1)).limit(1).findFirst().getAsInt());
		}
		return randomNumArray.toString();
	}
	
	@RequestMapping(value="/sortRandomNumbers", method=RequestMethod.POST)
	public @ResponseBody String sortRandomArray(@RequestParam("randomObj") String randomArrayString) {
		try {
			System.out.println("JSONArray: " + randomArrayString);
			JSONArray randomNumberArray = new JSONArray(randomArrayString);
			this.arr = new int[randomNumberArray.length()];
			
			for(int i=0;i<randomNumberArray.length();i++) {
				this.arr[i]= randomNumberArray.getInt(i);
			}
			randomNumberArrayClone = randomNumberArray;
			JSONArray sortedArray = new JSONArray();
			implementSortingAlgorithm();
			System.out.println("Sorted Obje	ct:");
			System.out.println(sortedArrayObject);
			System.out.println("Sorted Array Length: " + sortedArrayObject.length());
			return sortedArrayObject.toString();
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return null; 
	}
	
	
	
	private void implementSortingAlgorithm() {
		try {
			int length = randomNumberArrayClone.length();
			int tempVar;
			for(int randomNumCount =length; randomNumCount>=0;randomNumCount--) {
				for(int i = 0;i<length-1;i++) {
					tempVar = i+1;
					if((int)randomNumberArrayClone.get(i) > (int)randomNumberArrayClone.get(tempVar)) {
						swapNumbers(i, tempVar);
					}
				}
				printNumbers();
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	private void implementSortingAlgorithm(int lowerIndex, int higherIndex) 
			throws JSONException {
        System.out.println("Count: " + sortedArrayObjKey);
        int i = lowerIndex;
        int j = higherIndex;
        int pivotCount = lowerIndex + (higherIndex-lowerIndex)/2;
        int pivot = (int)randomNumberArrayClone.get(pivotCount);
        while (i <= j) {
           
            while ((int)randomNumberArrayClone.get(i) < pivot) {
                i++;
            }
            while ((int)randomNumberArrayClone.get(j) > pivot) {
                j--;
            }
            if (i <= j) {
            	swapNumbers(i, j);
                i++;
                j--;
            }
        }
        //System.out.println("Sorted Array");
        sortedArrayObject.put(Integer.toString(sortedArrayObjKey),randomNumberArrayClone);
        sortedArrayObjKey++;
        //System.out.println();
        System.out.println(randomNumberArrayClone);
        System.out.println();
        if (lowerIndex < j)
        	implementSortingAlgorithm(lowerIndex, j);
        if (i < higherIndex)
        	implementSortingAlgorithm(i, higherIndex);
    }
	
	
	
	private void swapNumbers(int firstNumber, int secondNumber) {
		try {
			int tempVar = (int) randomNumberArrayClone.get(firstNumber);
			randomNumberArrayClone.put(firstNumber, secondNumber);
			randomNumberArrayClone.put(secondNumber, tempVar);
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	private void printNumbers() {
		//System.out.println("Array Sorting::");
		System.out.println(randomNumberArrayClone.toString());
	}
	
}

